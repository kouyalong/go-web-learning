// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.17.3
// source: qsl.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LogType int32

const (
	LogType_UNKNOWN        LogType = 0
	LogType_PROC_CREATE    LogType = 1
	LogType_NET_CONNECT    LogType = 2
	LogType_SHELL_LOG      LogType = 3
	LogType_ACCESS_LOG     LogType = 4
	LogType_ACCOUNT_CHANGE LogType = 5
	LogType_SCRIPT_EXEC    LogType = 6
	LogType_DNS_ACCESS     LogType = 7
)

// Enum value maps for LogType.
var (
	LogType_name = map[int32]string{
		0: "UNKNOWN",
		1: "PROC_CREATE",
		2: "NET_CONNECT",
		3: "SHELL_LOG",
		4: "ACCESS_LOG",
		5: "ACCOUNT_CHANGE",
		6: "SCRIPT_EXEC",
		7: "DNS_ACCESS",
	}
	LogType_value = map[string]int32{
		"UNKNOWN":        0,
		"PROC_CREATE":    1,
		"NET_CONNECT":    2,
		"SHELL_LOG":      3,
		"ACCESS_LOG":     4,
		"ACCOUNT_CHANGE": 5,
		"SCRIPT_EXEC":    6,
		"DNS_ACCESS":     7,
	}
)

func (x LogType) Enum() *LogType {
	p := new(LogType)
	*p = x
	return p
}

func (x LogType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogType) Descriptor() protoreflect.EnumDescriptor {
	return file_qsl_proto_enumTypes[0].Descriptor()
}

func (LogType) Type() protoreflect.EnumType {
	return &file_qsl_proto_enumTypes[0]
}

func (x LogType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogType.Descriptor instead.
func (LogType) EnumDescriptor() ([]byte, []int) {
	return file_qsl_proto_rawDescGZIP(), []int{0}
}

type SearchRequest_QueryType int32

const (
	SearchRequest_UNKNOWN  SearchRequest_QueryType = 0
	SearchRequest_SIMPLE   SearchRequest_QueryType = 1 // 简单
	SearchRequest_COMPLEX  SearchRequest_QueryType = 2 // 复合
	SearchRequest_ADVANCED SearchRequest_QueryType = 3 //高级
)

// Enum value maps for SearchRequest_QueryType.
var (
	SearchRequest_QueryType_name = map[int32]string{
		0: "UNKNOWN",
		1: "SIMPLE",
		2: "COMPLEX",
		3: "ADVANCED",
	}
	SearchRequest_QueryType_value = map[string]int32{
		"UNKNOWN":  0,
		"SIMPLE":   1,
		"COMPLEX":  2,
		"ADVANCED": 3,
	}
)

func (x SearchRequest_QueryType) Enum() *SearchRequest_QueryType {
	p := new(SearchRequest_QueryType)
	*p = x
	return p
}

func (x SearchRequest_QueryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchRequest_QueryType) Descriptor() protoreflect.EnumDescriptor {
	return file_qsl_proto_enumTypes[1].Descriptor()
}

func (SearchRequest_QueryType) Type() protoreflect.EnumType {
	return &file_qsl_proto_enumTypes[1]
}

func (x SearchRequest_QueryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchRequest_QueryType.Descriptor instead.
func (SearchRequest_QueryType) EnumDescriptor() ([]byte, []int) {
	return file_qsl_proto_rawDescGZIP(), []int{0, 0}
}

type StatusResponse_JobStatus int32

const (
	StatusResponse_UNKNOWN  StatusResponse_JobStatus = 0
	StatusResponse_INIT     StatusResponse_JobStatus = 1
	StatusResponse_RUNNING  StatusResponse_JobStatus = 2
	StatusResponse_SUCCESS  StatusResponse_JobStatus = 3
	StatusResponse_CANCELED StatusResponse_JobStatus = 4
	StatusResponse_FAILED   StatusResponse_JobStatus = 5
	StatusResponse_TIMEOUT  StatusResponse_JobStatus = 6
)

// Enum value maps for StatusResponse_JobStatus.
var (
	StatusResponse_JobStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "INIT",
		2: "RUNNING",
		3: "SUCCESS",
		4: "CANCELED",
		5: "FAILED",
		6: "TIMEOUT",
	}
	StatusResponse_JobStatus_value = map[string]int32{
		"UNKNOWN":  0,
		"INIT":     1,
		"RUNNING":  2,
		"SUCCESS":  3,
		"CANCELED": 4,
		"FAILED":   5,
		"TIMEOUT":  6,
	}
)

func (x StatusResponse_JobStatus) Enum() *StatusResponse_JobStatus {
	p := new(StatusResponse_JobStatus)
	*p = x
	return p
}

func (x StatusResponse_JobStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusResponse_JobStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_qsl_proto_enumTypes[2].Descriptor()
}

func (StatusResponse_JobStatus) Type() protoreflect.EnumType {
	return &file_qsl_proto_enumTypes[2]
}

func (x StatusResponse_JobStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusResponse_JobStatus.Descriptor instead.
func (StatusResponse_JobStatus) EnumDescriptor() ([]byte, []int) {
	return file_qsl_proto_rawDescGZIP(), []int{8, 0}
}

type Column_Type int32

const (
	Column_UNKNOWN Column_Type = 0
	Column_STRING  Column_Type = 1
	Column_NUMBER  Column_Type = 2
	Column_TIME    Column_Type = 3
	Column_IP      Column_Type = 4
	Column_BOOL    Column_Type = 5
)

// Enum value maps for Column_Type.
var (
	Column_Type_name = map[int32]string{
		0: "UNKNOWN",
		1: "STRING",
		2: "NUMBER",
		3: "TIME",
		4: "IP",
		5: "BOOL",
	}
	Column_Type_value = map[string]int32{
		"UNKNOWN": 0,
		"STRING":  1,
		"NUMBER":  2,
		"TIME":    3,
		"IP":      4,
		"BOOL":    5,
	}
)

func (x Column_Type) Enum() *Column_Type {
	p := new(Column_Type)
	*p = x
	return p
}

func (x Column_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Column_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_qsl_proto_enumTypes[3].Descriptor()
}

func (Column_Type) Type() protoreflect.EnumType {
	return &file_qsl_proto_enumTypes[3]
}

func (x Column_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Column_Type.Descriptor instead.
func (Column_Type) EnumDescriptor() ([]byte, []int) {
	return file_qsl_proto_rawDescGZIP(), []int{17, 0}
}

type ShowRequest_InfoType int32

const (
	ShowRequest_UNKNOWN      ShowRequest_InfoType = 0
	ShowRequest_CUSTOM_MACRO ShowRequest_InfoType = 1 //自定义宏
	ShowRequest_SYSTEM_MACRO ShowRequest_InfoType = 2 //系统宏
	ShowRequest_FUNCTION     ShowRequest_InfoType = 3 //函数
	ShowRequest_ALIAS        ShowRequest_InfoType = 4 //别名
	ShowRequest_USER_TABLE   ShowRequest_InfoType = 5 // 用户自定义表
)

// Enum value maps for ShowRequest_InfoType.
var (
	ShowRequest_InfoType_name = map[int32]string{
		0: "UNKNOWN",
		1: "CUSTOM_MACRO",
		2: "SYSTEM_MACRO",
		3: "FUNCTION",
		4: "ALIAS",
		5: "USER_TABLE",
	}
	ShowRequest_InfoType_value = map[string]int32{
		"UNKNOWN":      0,
		"CUSTOM_MACRO": 1,
		"SYSTEM_MACRO": 2,
		"FUNCTION":     3,
		"ALIAS":        4,
		"USER_TABLE":   5,
	}
)

func (x ShowRequest_InfoType) Enum() *ShowRequest_InfoType {
	p := new(ShowRequest_InfoType)
	*p = x
	return p
}

func (x ShowRequest_InfoType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ShowRequest_InfoType) Descriptor() protoreflect.EnumDescriptor {
	return file_qsl_proto_enumTypes[4].Descriptor()
}

func (ShowRequest_InfoType) Type() protoreflect.EnumType {
	return &file_qsl_proto_enumTypes[4]
}

func (x ShowRequest_InfoType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ShowRequest_InfoType.Descriptor instead.
func (ShowRequest_InfoType) EnumDescriptor() ([]byte, []int) {
	return file_qsl_proto_rawDescGZIP(), []int{21, 0}
}

type SearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppKey    string                  `protobuf:"bytes,1,opt,name=app_key,json=appKey,proto3" json:"app_key,omitempty"`                                         // 应用信息
	AppUser   string                  `protobuf:"bytes,2,opt,name=app_user,json=appUser,proto3" json:"app_user,omitempty"`                                      // 应用内用户ID，用于区分自定义宏
	Qsl       string                  `protobuf:"bytes,3,opt,name=qsl,proto3" json:"qsl,omitempty"`                                                             // 输入框语句
	Timeout   int32                   `protobuf:"varint,4,opt,name=timeout,proto3" json:"timeout,omitempty"`                                                    // 超时时间
	Filters   []*Filter               `protobuf:"bytes,5,rep,name=filters,proto3" json:"filters,omitempty"`                                                     // 过滤条件
	Whitelist []*WhiteListRule        `protobuf:"bytes,6,rep,name=whitelist,proto3" json:"whitelist,omitempty"`                                                 // 白名单
	LogScopes []LogType               `protobuf:"varint,7,rep,packed,name=log_scopes,json=logScopes,proto3,enum=LogType" json:"log_scopes,omitempty"`           // 日志类型
	TimeStart string                  `protobuf:"bytes,8,opt,name=time_start,json=timeStart,proto3" json:"time_start,omitempty"`                                //时间范围 只能是简单、复合语句
	TimeEnd   string                  `protobuf:"bytes,9,opt,name=time_end,json=timeEnd,proto3" json:"time_end,omitempty"`                                      //时间范围 只能是简单、复合语句
	QueryType SearchRequest_QueryType `protobuf:"varint,10,opt,name=query_type,json=queryType,proto3,enum=SearchRequest_QueryType" json:"query_type,omitempty"` //查询类型
	Orders    []*Order                `protobuf:"bytes,11,rep,name=orders,proto3" json:"orders,omitempty"`                                                      // 默认排序方式，只适用于ES数据源且类型为简单和复合时
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qsl_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qsl_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_qsl_proto_rawDescGZIP(), []int{0}
}

func (x *SearchRequest) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *SearchRequest) GetAppUser() string {
	if x != nil {
		return x.AppUser
	}
	return ""
}

func (x *SearchRequest) GetQsl() string {
	if x != nil {
		return x.Qsl
	}
	return ""
}

func (x *SearchRequest) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *SearchRequest) GetFilters() []*Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *SearchRequest) GetWhitelist() []*WhiteListRule {
	if x != nil {
		return x.Whitelist
	}
	return nil
}

func (x *SearchRequest) GetLogScopes() []LogType {
	if x != nil {
		return x.LogScopes
	}
	return nil
}

func (x *SearchRequest) GetTimeStart() string {
	if x != nil {
		return x.TimeStart
	}
	return ""
}

func (x *SearchRequest) GetTimeEnd() string {
	if x != nil {
		return x.TimeEnd
	}
	return ""
}

func (x *SearchRequest) GetQueryType() SearchRequest_QueryType {
	if x != nil {
		return x.QueryType
	}
	return SearchRequest_UNKNOWN
}

func (x *SearchRequest) GetOrders() []*Order {
	if x != nil {
		return x.Orders
	}
	return nil
}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldKey  string      `protobuf:"bytes,1,opt,name=field_key,json=fieldKey,proto3" json:"field_key,omitempty"`
	OptionKey string      `protobuf:"bytes,2,opt,name=option_key,json=optionKey,proto3" json:"option_key,omitempty"`
	Content   []string    `protobuf:"bytes,3,rep,name=content,proto3" json:"content,omitempty"`
	FieldType Column_Type `protobuf:"varint,4,opt,name=field_type,json=fieldType,proto3,enum=Column_Type" json:"field_type,omitempty"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qsl_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_qsl_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_qsl_proto_rawDescGZIP(), []int{1}
}

func (x *Filter) GetFieldKey() string {
	if x != nil {
		return x.FieldKey
	}
	return ""
}

func (x *Filter) GetOptionKey() string {
	if x != nil {
		return x.OptionKey
	}
	return ""
}

func (x *Filter) GetContent() []string {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Filter) GetFieldType() Column_Type {
	if x != nil {
		return x.FieldType
	}
	return Column_UNKNOWN
}

type WhiteListRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters   []*Filter `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
	LogScopes []LogType `protobuf:"varint,2,rep,packed,name=log_scopes,json=logScopes,proto3,enum=LogType" json:"log_scopes,omitempty"` // ["proc_create","net_connect"]
}

func (x *WhiteListRule) Reset() {
	*x = WhiteListRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qsl_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhiteListRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhiteListRule) ProtoMessage() {}

func (x *WhiteListRule) ProtoReflect() protoreflect.Message {
	mi := &file_qsl_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhiteListRule.ProtoReflect.Descriptor instead.
func (*WhiteListRule) Descriptor() ([]byte, []int) {
	return file_qsl_proto_rawDescGZIP(), []int{2}
}

func (x *WhiteListRule) GetFilters() []*Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *WhiteListRule) GetLogScopes() []LogType {
	if x != nil {
		return x.LogScopes
	}
	return nil
}

type SearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *StatusCode `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	JobId  string      `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qsl_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qsl_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_qsl_proto_rawDescGZIP(), []int{3}
}

func (x *SearchResponse) GetStatus() *StatusCode {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *SearchResponse) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type SyncResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *StatusCode `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Info   []byte      `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *SyncResponse) Reset() {
	*x = SyncResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qsl_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncResponse) ProtoMessage() {}

func (x *SyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qsl_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncResponse.ProtoReflect.Descriptor instead.
func (*SyncResponse) Descriptor() ([]byte, []int) {
	return file_qsl_proto_rawDescGZIP(), []int{4}
}

func (x *SyncResponse) GetStatus() *StatusCode {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *SyncResponse) GetInfo() []byte {
	if x != nil {
		return x.Info
	}
	return nil
}

type StatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *StatusRequest) Reset() {
	*x = StatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qsl_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusRequest) ProtoMessage() {}

func (x *StatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qsl_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusRequest.ProtoReflect.Descriptor instead.
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return file_qsl_proto_rawDescGZIP(), []int{5}
}

func (x *StatusRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type LogCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogType LogType `protobuf:"varint,1,opt,name=log_type,json=logType,proto3,enum=LogType" json:"log_type,omitempty"`
	Count   int32   `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *LogCount) Reset() {
	*x = LogCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qsl_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogCount) ProtoMessage() {}

func (x *LogCount) ProtoReflect() protoreflect.Message {
	mi := &file_qsl_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogCount.ProtoReflect.Descriptor instead.
func (*LogCount) Descriptor() ([]byte, []int) {
	return file_qsl_proto_rawDescGZIP(), []int{6}
}

func (x *LogCount) GetLogType() LogType {
	if x != nil {
		return x.LogType
	}
	return LogType_UNKNOWN
}

func (x *LogCount) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GroupCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *StatusCode `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Counts []*LogCount `protobuf:"bytes,2,rep,name=counts,proto3" json:"counts,omitempty"`
}

func (x *GroupCountResponse) Reset() {
	*x = GroupCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qsl_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupCountResponse) ProtoMessage() {}

func (x *GroupCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qsl_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupCountResponse.ProtoReflect.Descriptor instead.
func (*GroupCountResponse) Descriptor() ([]byte, []int) {
	return file_qsl_proto_rawDescGZIP(), []int{7}
}

func (x *GroupCountResponse) GetStatus() *StatusCode {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GroupCountResponse) GetCounts() []*LogCount {
	if x != nil {
		return x.Counts
	}
	return nil
}

type StatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    *StatusCode              `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	JobStatus StatusResponse_JobStatus `protobuf:"varint,2,opt,name=job_status,json=jobStatus,proto3,enum=StatusResponse_JobStatus" json:"job_status,omitempty"` //任务状态
	Total     int32                    `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	Details   *structpb.Struct         `protobuf:"bytes,4,opt,name=details,proto3" json:"details,omitempty"` // 查询任务的内部细节，类型可以确定
	Message   string                   `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qsl_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qsl_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_qsl_proto_rawDescGZIP(), []int{8}
}

func (x *StatusResponse) GetStatus() *StatusCode {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *StatusResponse) GetJobStatus() StatusResponse_JobStatus {
	if x != nil {
		return x.JobStatus
	}
	return StatusResponse_UNKNOWN
}

func (x *StatusResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *StatusResponse) GetDetails() *structpb.Struct {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *StatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId  string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Limit  int32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int32  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Order  *Order `protobuf:"bytes,4,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *ResultRequest) Reset() {
	*x = ResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qsl_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultRequest) ProtoMessage() {}

func (x *ResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qsl_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultRequest.ProtoReflect.Descriptor instead.
func (*ResultRequest) Descriptor() ([]byte, []int) {
	return file_qsl_proto_rawDescGZIP(), []int{9}
}

func (x *ResultRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *ResultRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ResultRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ResultRequest) GetOrder() *Order {
	if x != nil {
		return x.Order
	}
	return nil
}

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`   // 排序的 key
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // 排序方式 asc|desc
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qsl_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_qsl_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_qsl_proto_rawDescGZIP(), []int{10}
}

func (x *Order) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Order) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type ResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *StatusCode `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Info   []byte      `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	Total  int32       `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"` //是否需要结果总数
}

func (x *ResultResponse) Reset() {
	*x = ResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qsl_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultResponse) ProtoMessage() {}

func (x *ResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qsl_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultResponse.ProtoReflect.Descriptor instead.
func (*ResultResponse) Descriptor() ([]byte, []int) {
	return file_qsl_proto_rawDescGZIP(), []int{11}
}

func (x *ResultResponse) GetStatus() *StatusCode {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ResultResponse) GetInfo() []byte {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ResultResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 响应状态，使用场景：拿到响应后先看 code，如果正常再去读StatusCode以外的其他信息；如果不正常，可以通过 message 和 details 查看不正常的详细说明
// gRPC 服务的响应状态
type StatusCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Details string `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *StatusCode) Reset() {
	*x = StatusCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qsl_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusCode) ProtoMessage() {}

func (x *StatusCode) ProtoReflect() protoreflect.Message {
	mi := &file_qsl_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusCode.ProtoReflect.Descriptor instead.
func (*StatusCode) Descriptor() ([]byte, []int) {
	return file_qsl_proto_rawDescGZIP(), []int{12}
}

func (x *StatusCode) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *StatusCode) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StatusCode) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

type TerminateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *TerminateRequest) Reset() {
	*x = TerminateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qsl_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminateRequest) ProtoMessage() {}

func (x *TerminateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qsl_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminateRequest.ProtoReflect.Descriptor instead.
func (*TerminateRequest) Descriptor() ([]byte, []int) {
	return file_qsl_proto_rawDescGZIP(), []int{13}
}

func (x *TerminateRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type TerminateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *StatusCode `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *TerminateResponse) Reset() {
	*x = TerminateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qsl_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminateResponse) ProtoMessage() {}

func (x *TerminateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qsl_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminateResponse.ProtoReflect.Descriptor instead.
func (*TerminateResponse) Descriptor() ([]byte, []int) {
	return file_qsl_proto_rawDescGZIP(), []int{14}
}

func (x *TerminateResponse) GetStatus() *StatusCode {
	if x != nil {
		return x.Status
	}
	return nil
}

type FieldRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *FieldRequest) Reset() {
	*x = FieldRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qsl_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldRequest) ProtoMessage() {}

func (x *FieldRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qsl_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldRequest.ProtoReflect.Descriptor instead.
func (*FieldRequest) Descriptor() ([]byte, []int) {
	return file_qsl_proto_rawDescGZIP(), []int{15}
}

func (x *FieldRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type FieldResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Columns []*Column   `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty"`
	Status  *StatusCode `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *FieldResponse) Reset() {
	*x = FieldResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qsl_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldResponse) ProtoMessage() {}

func (x *FieldResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qsl_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldResponse.ProtoReflect.Descriptor instead.
func (*FieldResponse) Descriptor() ([]byte, []int) {
	return file_qsl_proto_rawDescGZIP(), []int{16}
}

func (x *FieldResponse) GetColumns() []*Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *FieldResponse) GetStatus() *StatusCode {
	if x != nil {
		return x.Status
	}
	return nil
}

type Column struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field string      `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Type  Column_Type `protobuf:"varint,2,opt,name=type,proto3,enum=Column_Type" json:"type,omitempty"`
}

func (x *Column) Reset() {
	*x = Column{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qsl_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Column) ProtoMessage() {}

func (x *Column) ProtoReflect() protoreflect.Message {
	mi := &file_qsl_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Column.ProtoReflect.Descriptor instead.
func (*Column) Descriptor() ([]byte, []int) {
	return file_qsl_proto_rawDescGZIP(), []int{17}
}

func (x *Column) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *Column) GetType() Column_Type {
	if x != nil {
		return x.Type
	}
	return Column_UNKNOWN
}

type SourceConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SourceConfigRequest) Reset() {
	*x = SourceConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qsl_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceConfigRequest) ProtoMessage() {}

func (x *SourceConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qsl_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceConfigRequest.ProtoReflect.Descriptor instead.
func (*SourceConfigRequest) Descriptor() ([]byte, []int) {
	return file_qsl_proto_rawDescGZIP(), []int{18}
}

type SourceConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Default string              `protobuf:"bytes,1,opt,name=default,proto3" json:"default,omitempty"` //默认数据源
	Sources []*DataSourceConfig `protobuf:"bytes,2,rep,name=sources,proto3" json:"sources,omitempty"`
	Status  *StatusCode         `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Pbe     string              `protobuf:"bytes,4,opt,name=pbe,proto3" json:"pbe,omitempty"`
}

func (x *SourceConfigResponse) Reset() {
	*x = SourceConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qsl_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceConfigResponse) ProtoMessage() {}

func (x *SourceConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qsl_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceConfigResponse.ProtoReflect.Descriptor instead.
func (*SourceConfigResponse) Descriptor() ([]byte, []int) {
	return file_qsl_proto_rawDescGZIP(), []int{19}
}

func (x *SourceConfigResponse) GetDefault() string {
	if x != nil {
		return x.Default
	}
	return ""
}

func (x *SourceConfigResponse) GetSources() []*DataSourceConfig {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *SourceConfigResponse) GetStatus() *StatusCode {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *SourceConfigResponse) GetPbe() string {
	if x != nil {
		return x.Pbe
	}
	return ""
}

type DataSourceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string                         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url            string                         `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Type           string                         `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Wisteria       bool                           `protobuf:"varint,4,opt,name=wisteria,proto3" json:"wisteria,omitempty"`
	Authentication bool                           `protobuf:"varint,5,opt,name=authentication,proto3" json:"authentication,omitempty"`
	Username       string                         `protobuf:"bytes,6,opt,name=username,proto3" json:"username,omitempty"`
	Password       string                         `protobuf:"bytes,7,opt,name=password,proto3" json:"password,omitempty"`
	DefaultDb      string                         `protobuf:"bytes,8,opt,name=default_db,json=defaultDb,proto3" json:"default_db,omitempty"`
	Abbreviate     map[string]string              `protobuf:"bytes,9,rep,name=abbreviate,proto3" json:"abbreviate,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IndexMapping   map[string]*structpb.ListValue `protobuf:"bytes,10,rep,name=index_mapping,json=indexMapping,proto3" json:"index_mapping,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //https://developers.google.com/protocol-buffers/docs/reference/python-generated#listvalue
}

func (x *DataSourceConfig) Reset() {
	*x = DataSourceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qsl_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataSourceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataSourceConfig) ProtoMessage() {}

func (x *DataSourceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_qsl_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataSourceConfig.ProtoReflect.Descriptor instead.
func (*DataSourceConfig) Descriptor() ([]byte, []int) {
	return file_qsl_proto_rawDescGZIP(), []int{20}
}

func (x *DataSourceConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DataSourceConfig) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *DataSourceConfig) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DataSourceConfig) GetWisteria() bool {
	if x != nil {
		return x.Wisteria
	}
	return false
}

func (x *DataSourceConfig) GetAuthentication() bool {
	if x != nil {
		return x.Authentication
	}
	return false
}

func (x *DataSourceConfig) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *DataSourceConfig) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *DataSourceConfig) GetDefaultDb() string {
	if x != nil {
		return x.DefaultDb
	}
	return ""
}

func (x *DataSourceConfig) GetAbbreviate() map[string]string {
	if x != nil {
		return x.Abbreviate
	}
	return nil
}

func (x *DataSourceConfig) GetIndexMapping() map[string]*structpb.ListValue {
	if x != nil {
		return x.IndexMapping
	}
	return nil
}

type ShowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppKey   string               `protobuf:"bytes,1,opt,name=app_key,json=appKey,proto3" json:"app_key,omitempty"`                                  // 应用信息
	AppUser  string               `protobuf:"bytes,2,opt,name=app_user,json=appUser,proto3" json:"app_user,omitempty"`                               // 应用内用户ID，用于区分自定义宏
	ShowType ShowRequest_InfoType `protobuf:"varint,3,opt,name=show_type,json=showType,proto3,enum=ShowRequest_InfoType" json:"show_type,omitempty"` // 展示类型等
}

func (x *ShowRequest) Reset() {
	*x = ShowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qsl_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowRequest) ProtoMessage() {}

func (x *ShowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qsl_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowRequest.ProtoReflect.Descriptor instead.
func (*ShowRequest) Descriptor() ([]byte, []int) {
	return file_qsl_proto_rawDescGZIP(), []int{21}
}

func (x *ShowRequest) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *ShowRequest) GetAppUser() string {
	if x != nil {
		return x.AppUser
	}
	return ""
}

func (x *ShowRequest) GetShowType() ShowRequest_InfoType {
	if x != nil {
		return x.ShowType
	}
	return ShowRequest_UNKNOWN
}

type ShowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details []*structpb.Struct `protobuf:"bytes,1,rep,name=details,proto3" json:"details,omitempty"`
	Status  *StatusCode        `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ShowResponse) Reset() {
	*x = ShowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qsl_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowResponse) ProtoMessage() {}

func (x *ShowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qsl_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowResponse.ProtoReflect.Descriptor instead.
func (*ShowResponse) Descriptor() ([]byte, []int) {
	return file_qsl_proto_rawDescGZIP(), []int{22}
}

func (x *ShowResponse) GetDetails() []*structpb.Struct {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ShowResponse) GetStatus() *StatusCode {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_qsl_proto protoreflect.FileDescriptor

var file_qsl_proto_rawDesc = []byte{
	0x0a, 0x09, 0x71, 0x73, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbd, 0x03, 0x0a, 0x0d, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61,
	0x70, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70,
	0x70, 0x4b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x10, 0x0a, 0x03, 0x71, 0x73, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x71, 0x73,
	0x6c, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x21, 0x0a, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x2c,
	0x0a, 0x09, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x09, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0a,
	0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x08, 0x2e, 0x4c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x53,
	0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12,
	0x37, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0x3f, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x49, 0x4d, 0x50, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x0b,
	0x0a, 0x07, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x58, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x41,
	0x44, 0x56, 0x41, 0x4e, 0x43, 0x45, 0x44, 0x10, 0x03, 0x22, 0x8b, 0x01, 0x0a, 0x06, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4b, 0x65,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x0a, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c,
	0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0x5b, 0x0a, 0x0d, 0x57, 0x68, 0x69, 0x74, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x27, 0x0a, 0x0a, 0x6c,
	0x6f, 0x67, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x08, 0x2e, 0x4c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x53, 0x63,
	0x6f, 0x70, 0x65, 0x73, 0x22, 0x4c, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x6a,
	0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62,
	0x49, 0x64, 0x22, 0x47, 0x0a, 0x0c, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x23, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x26, 0x0a, 0x0d, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f,
	0x62, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x23, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x08, 0x2e, 0x4c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6c, 0x6f, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x5c, 0x0a, 0x12, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x23, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0xb7, 0x02, 0x0a, 0x0e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x38, 0x0a, 0x0a, 0x6a, 0x6f, 0x62, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x09, 0x6a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x63, 0x0a,
	0x09, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x49, 0x54, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0b,
	0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x43,
	0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54,
	0x10, 0x06, 0x22, 0x72, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x2d, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x5f, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x54, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x29, 0x0a, 0x10,
	0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x11, 0x54, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x25, 0x0a, 0x0c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x0d, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x07, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x23, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x89, 0x01, 0x0a, 0x06, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x12, 0x20, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0c, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x22, 0x47, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52,
	0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x10,
	0x02, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x03, 0x12, 0x06, 0x0a, 0x02, 0x49,
	0x50, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4f, 0x4f, 0x4c, 0x10, 0x05, 0x22, 0x15, 0x0a,
	0x13, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x94, 0x01, 0x0a, 0x14, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x62, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x62, 0x65, 0x22, 0x90, 0x04, 0x0a, 0x10,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x77, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e,
	0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x64, 0x62, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x44, 0x62, 0x12, 0x41, 0x0a, 0x0a, 0x61, 0x62, 0x62, 0x72, 0x65, 0x76, 0x69,
	0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x41, 0x62, 0x62,
	0x72, 0x65, 0x76, 0x69, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x62,
	0x62, 0x72, 0x65, 0x76, 0x69, 0x61, 0x74, 0x65, 0x12, 0x48, 0x0a, 0x0d, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x62, 0x62, 0x72, 0x65, 0x76, 0x69, 0x61, 0x74, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x5b, 0x0a, 0x11, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xdb,
	0x01, 0x0a, 0x0b, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x61, 0x70, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x32, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x73, 0x68,
	0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x22, 0x64, 0x0a, 0x08, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x10, 0x0a, 0x0c, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x5f, 0x4d, 0x41, 0x43, 0x52, 0x4f, 0x10,
	0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x4d, 0x41, 0x43, 0x52,
	0x4f, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x55, 0x4e, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x03, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x4c, 0x49, 0x41, 0x53, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x05, 0x22, 0x66, 0x0a, 0x0c,
	0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x23, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x2a, 0x8c, 0x01, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0f, 0x0a,
	0x0b, 0x50, 0x52, 0x4f, 0x43, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x0f,
	0x0a, 0x0b, 0x4e, 0x45, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x02, 0x12,
	0x0d, 0x0a, 0x09, 0x53, 0x48, 0x45, 0x4c, 0x4c, 0x5f, 0x4c, 0x4f, 0x47, 0x10, 0x03, 0x12, 0x0e,
	0x0a, 0x0a, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x4c, 0x4f, 0x47, 0x10, 0x04, 0x12, 0x12,
	0x0a, 0x0e, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45,
	0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x5f, 0x45, 0x58, 0x45,
	0x43, 0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x4e, 0x53, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53,
	0x53, 0x10, 0x07, 0x32, 0xd0, 0x03, 0x0a, 0x09, 0x51, 0x53, 0x4c, 0x45, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x12, 0x2a, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x0e, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2e, 0x0a,
	0x09, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2e, 0x0a,
	0x09, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x34, 0x0a,
	0x09, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x11, 0x2e, 0x54, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e,
	0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x12, 0x0d, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x33, 0x0a, 0x0a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x0e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x0b, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x0e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x14, 0x2e, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x15, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53,
	0x68, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0c, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_qsl_proto_rawDescOnce sync.Once
	file_qsl_proto_rawDescData = file_qsl_proto_rawDesc
)

func file_qsl_proto_rawDescGZIP() []byte {
	file_qsl_proto_rawDescOnce.Do(func() {
		file_qsl_proto_rawDescData = protoimpl.X.CompressGZIP(file_qsl_proto_rawDescData)
	})
	return file_qsl_proto_rawDescData
}

var file_qsl_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_qsl_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_qsl_proto_goTypes = []interface{}{
	(LogType)(0),                  // 0: LogType
	(SearchRequest_QueryType)(0),  // 1: SearchRequest.QueryType
	(StatusResponse_JobStatus)(0), // 2: StatusResponse.JobStatus
	(Column_Type)(0),              // 3: Column.Type
	(ShowRequest_InfoType)(0),     // 4: ShowRequest.InfoType
	(*SearchRequest)(nil),         // 5: SearchRequest
	(*Filter)(nil),                // 6: Filter
	(*WhiteListRule)(nil),         // 7: WhiteListRule
	(*SearchResponse)(nil),        // 8: SearchResponse
	(*SyncResponse)(nil),          // 9: SyncResponse
	(*StatusRequest)(nil),         // 10: StatusRequest
	(*LogCount)(nil),              // 11: LogCount
	(*GroupCountResponse)(nil),    // 12: GroupCountResponse
	(*StatusResponse)(nil),        // 13: StatusResponse
	(*ResultRequest)(nil),         // 14: ResultRequest
	(*Order)(nil),                 // 15: Order
	(*ResultResponse)(nil),        // 16: ResultResponse
	(*StatusCode)(nil),            // 17: StatusCode
	(*TerminateRequest)(nil),      // 18: TerminateRequest
	(*TerminateResponse)(nil),     // 19: TerminateResponse
	(*FieldRequest)(nil),          // 20: FieldRequest
	(*FieldResponse)(nil),         // 21: FieldResponse
	(*Column)(nil),                // 22: Column
	(*SourceConfigRequest)(nil),   // 23: SourceConfigRequest
	(*SourceConfigResponse)(nil),  // 24: SourceConfigResponse
	(*DataSourceConfig)(nil),      // 25: DataSourceConfig
	(*ShowRequest)(nil),           // 26: ShowRequest
	(*ShowResponse)(nil),          // 27: ShowResponse
	nil,                           // 28: DataSourceConfig.AbbreviateEntry
	nil,                           // 29: DataSourceConfig.IndexMappingEntry
	(*structpb.Struct)(nil),       // 30: google.protobuf.Struct
	(*structpb.ListValue)(nil),    // 31: google.protobuf.ListValue
}
var file_qsl_proto_depIdxs = []int32{
	6,  // 0: SearchRequest.filters:type_name -> Filter
	7,  // 1: SearchRequest.whitelist:type_name -> WhiteListRule
	0,  // 2: SearchRequest.log_scopes:type_name -> LogType
	1,  // 3: SearchRequest.query_type:type_name -> SearchRequest.QueryType
	15, // 4: SearchRequest.orders:type_name -> Order
	3,  // 5: Filter.field_type:type_name -> Column.Type
	6,  // 6: WhiteListRule.filters:type_name -> Filter
	0,  // 7: WhiteListRule.log_scopes:type_name -> LogType
	17, // 8: SearchResponse.status:type_name -> StatusCode
	17, // 9: SyncResponse.status:type_name -> StatusCode
	0,  // 10: LogCount.log_type:type_name -> LogType
	17, // 11: GroupCountResponse.status:type_name -> StatusCode
	11, // 12: GroupCountResponse.counts:type_name -> LogCount
	17, // 13: StatusResponse.status:type_name -> StatusCode
	2,  // 14: StatusResponse.job_status:type_name -> StatusResponse.JobStatus
	30, // 15: StatusResponse.details:type_name -> google.protobuf.Struct
	15, // 16: ResultRequest.order:type_name -> Order
	17, // 17: ResultResponse.status:type_name -> StatusCode
	17, // 18: TerminateResponse.status:type_name -> StatusCode
	22, // 19: FieldResponse.columns:type_name -> Column
	17, // 20: FieldResponse.status:type_name -> StatusCode
	3,  // 21: Column.type:type_name -> Column.Type
	25, // 22: SourceConfigResponse.sources:type_name -> DataSourceConfig
	17, // 23: SourceConfigResponse.status:type_name -> StatusCode
	28, // 24: DataSourceConfig.abbreviate:type_name -> DataSourceConfig.AbbreviateEntry
	29, // 25: DataSourceConfig.index_mapping:type_name -> DataSourceConfig.IndexMappingEntry
	4,  // 26: ShowRequest.show_type:type_name -> ShowRequest.InfoType
	30, // 27: ShowResponse.details:type_name -> google.protobuf.Struct
	17, // 28: ShowResponse.status:type_name -> StatusCode
	31, // 29: DataSourceConfig.IndexMappingEntry.value:type_name -> google.protobuf.ListValue
	5,  // 30: QSLEngine.Query:input_type -> SearchRequest
	10, // 31: QSLEngine.GetStatus:input_type -> StatusRequest
	14, // 32: QSLEngine.GetResult:input_type -> ResultRequest
	18, // 33: QSLEngine.Terminate:input_type -> TerminateRequest
	20, // 34: QSLEngine.GetFields:input_type -> FieldRequest
	5,  // 35: QSLEngine.GroupCount:input_type -> SearchRequest
	5,  // 36: QSLEngine.SimpleQuery:input_type -> SearchRequest
	23, // 37: QSLEngine.GetSourceConfig:input_type -> SourceConfigRequest
	26, // 38: QSLEngine.GetShowInfo:input_type -> ShowRequest
	8,  // 39: QSLEngine.Query:output_type -> SearchResponse
	13, // 40: QSLEngine.GetStatus:output_type -> StatusResponse
	16, // 41: QSLEngine.GetResult:output_type -> ResultResponse
	19, // 42: QSLEngine.Terminate:output_type -> TerminateResponse
	21, // 43: QSLEngine.GetFields:output_type -> FieldResponse
	12, // 44: QSLEngine.GroupCount:output_type -> GroupCountResponse
	9,  // 45: QSLEngine.SimpleQuery:output_type -> SyncResponse
	24, // 46: QSLEngine.GetSourceConfig:output_type -> SourceConfigResponse
	27, // 47: QSLEngine.GetShowInfo:output_type -> ShowResponse
	39, // [39:48] is the sub-list for method output_type
	30, // [30:39] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_qsl_proto_init() }
func file_qsl_proto_init() {
	if File_qsl_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_qsl_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qsl_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qsl_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhiteListRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qsl_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qsl_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qsl_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qsl_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qsl_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qsl_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qsl_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qsl_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qsl_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qsl_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qsl_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qsl_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qsl_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qsl_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qsl_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Column); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qsl_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qsl_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qsl_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataSourceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qsl_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qsl_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_qsl_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_qsl_proto_goTypes,
		DependencyIndexes: file_qsl_proto_depIdxs,
		EnumInfos:         file_qsl_proto_enumTypes,
		MessageInfos:      file_qsl_proto_msgTypes,
	}.Build()
	File_qsl_proto = out.File
	file_qsl_proto_rawDesc = nil
	file_qsl_proto_goTypes = nil
	file_qsl_proto_depIdxs = nil
}
